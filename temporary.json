

// INDEX
[customActions.MARKER_DATA_FETCH]: getInfoWindowDetail,


// handlers.js
export const getInfoWindowDetail = createGraphQLEffect(glideRecordQuery, {
	variableList: ["encodedQuery"],
	templateVarList: ['table', 'fields', 'sysId'],
	successActionType: customActions.MARKER_DATA_FETCH_SUCCEEDED,
});



// MARKER_DATA_FETCH_SUCCEEDED
//it's not clear how the value for the active parameter in the graphQL query GQL_QUERY is passed to dataFetchHandler
it's not clear how the value for the active parameter in the graphQL 

[
    "defaultValue": [
        {
            "table": "sys_user",
            "sys_id": "5137153cc611227c000bbd1bd8cd2005",
            "lat": 40.7896239,
            "long": -73.9598939,
            "image": "https://pbs.twimg.com/profile_images/1483341411911041025/hY5z-EDB_400x400.jpg"
        }
    ],
    {
        "name": "initial_zoom",
        "label": "Initial Zoom",
        "description": "",
        "defaultValue": 5,
        "fieldType": "integer",
        "readOnly": false,
        "required": true,
        "typeMetadata": {}
    }


,
			"actions": [
				{
					"label": "Map marker clicked",
					"name": "MAP_MARKER_CLICKED",
					"description": "Dispatched when a user clicks a marker, related button or a link"
				}
			]


            "configLayout": {
				"layout": [
					{
						"initialOpenState": true,
						"sectionType": "section",
						"id": "data",
						"title": "Data",
						"children": [
							"data"
						],
						"icon": "database-outline"
					}
				]
			},




            "properties": [
				{
					"name": "data",
					"label": "List of map markers",
					"description": "Array of objects that defines the items displayed on the map - each object can have values for 'table', 'sys_id', 'lat', 'long', 'image'",
					"fieldType": "json",
					"readOnly": false,
					"required": true,
					"defaultValue": "[{\"table\":\"sys_user\"}], \"sys_id\": \"5137153cc611227c000bbd1bd8cd2005\", \"lat\": 32.582800, \"long\": -117.034330, \"image\": \"//now-logo.svg\"}]",
					"typeMetadata": {
						"schema": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"table": {
										"type": "string"
									},
									"sys_id": {
										"type": "string"
									},
									"lat": {
										"type": "number"
									},
									"long": {
										"type": "number"
									},
									"image": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				{
					"name": "Case",
					"label": "Case",
					"description": "The Case that the Milestone Tracker should use",
					"fieldType": "reference",
					"typeMetadata": {
						"reference": "sn_niem_case"
					}
				}
			]




			"typeMetadata": {
				"schema": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"table": {
								"type": "string"
							},
							"sys_id": {
								"type": "string"
							},
							"lat": {
								"type": "number"
							},
							"long": {
								"type": "number"
							},
							"image": {
								"type": "string"
							}
						}
					}
				}
			}